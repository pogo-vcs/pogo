'\" t
.nh
.TH "pogo" "1" "Sep 2025" "pogo/dev" "Pogo Manual"

.SH NAME
pogo-info - Display the current working copy status


.SH SYNOPSIS
\fBpogo info [flags]\fP


.SH DESCRIPTION
Display information about the current working copy and repository status.

.PP
This command is particularly useful for:
.IP \(bu 2
Checking which change you're currently working on
.IP \(bu 2
Seeing if there are any conflicts
.IP \(bu 2
Integrating Pogo status into your shell prompt
.IP \(bu 2
Scripting and automation

.PP
The output can be customized using Go's text/template syntax with the --format flag.

.PP
Available template variables:

.TS
allbox;
l l 
l l .
\fBVariable\fP	\fBDescription\fP
\fB{{.ChangeNamePrefix}}\fR	T{
The adjective part of the change name
T}
\fB{{.ChangeNameSuffix}}\fR	T{
The noun and number part of the change name
T}
\fB{{.ChangeName}}\fR	T{
The full change name (prefix + suffix)
T}
\fB{{.ChangeDescription}}\fR	T{
The description of the current change
T}
\fB{{.Bookmarks}}\fR	T{
Array of bookmarks pointing to this change
T}
\fB{{.IsInConflict}}\fR	T{
Boolean indicating if the change has conflicts
T}
\fB{{.Error}}\fR	T{
Any error message (connection issues, etc.)
T}
.TE

.PP
The default format shows a colored prompt-friendly output with conflict
indicators and bookmark information.

.PP
Fish shell integration:

.EX
function fish_vcs_prompt --description 'Print all vcs prompts'
    pogo info $argv
    or fish_jj_prompt $argv
    or fish_git_prompt $argv
    or fish_hg_prompt $argv
    or fish_fossil_prompt $argv
end
.EE


.SH OPTIONS
\fB--format\fP="({{if .Error}}\\x1b[31m{{.Error}}\\x1b[0m{{else}}{{if .IsInConflict}}ðŸ’¥{{end}}\\x1b[35m{{.ChangeNamePrefix}}\\x1b[90m{{.ChangeNameSuffix}}\\x1b[0m {{- range $i, $b := .Bookmarks}}{{if $i}}, {{else}} {{end}}{{if eq . \\"main\\"}}\\x1b[32m{{.}}\\x1b[0m{{else}}{{.}}{{end}}{{end}}{{end}})"
	Format string for the prompt output

.PP
\fB-h\fP, \fB--help\fP[=false]
	help for info


.SH OPTIONS INHERITED FROM PARENT COMMANDS
\fB--time\fP[=false]
	Measure command execution time

.PP
\fB-v\fP, \fB--verbose\fP[=false]
	Enable verbose debug logging


.SH EXAMPLE
.EX
# Show default formatted info
pogo info

# Simple format showing just the change name
pogo info --format '{{.ChangeName}}'

# Format for shell prompt showing change and bookmarks
pogo info --format '({{.ChangeName}}{{range .Bookmarks}} [{{.}}]{{end}})'

# Show description if available
pogo info --format '{{.ChangeName}}: {{.ChangeDescription}}'

# Bash prompt integration example
export PS1='$(pogo info --format "{{.ChangeName}}") \\$ '

# Check for conflicts in a script
pogo info --format '{{.IsInConflict}}'
.EE


.SH SEE ALSO
\fBpogo(1)\fP
